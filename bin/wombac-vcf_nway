#!/usr/bin/env perl
use warnings;
use strict;
use Data::Dumper;

my(@Options, $verbose);
setOptions();

my %snp;
my @id;

for my $vcf (@ARGV) {
  open VCF, '<', $vcf or die "can not open VCF file: $vcf";
  #$vcf =~ m{^.*?([^/]+)(\.vcf)?} or die "can't extract an ID from filename: $vcf";
  my $id = $vcf;
  $id =~ s{^.*/}{};
  $id =~ s/\.vcf$//;
  push @id, $id;
  while (<VCF>) {
    # CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  unknown
    next if m/^#/;
    chomp;
    my($seq,$pos,undef,$ref,$alt) = split m/\t/;
    next unless length($ref)==1 and length($alt)==1;
    $snp{$seq}{$pos}{REF} = $ref;
    $snp{$seq}{$pos}{$id} = $alt;
  }
  close VCF;
}

#print Dumper(\%snp);
my %aln;
for my $seq (keys %snp) {
  for my $pos (sort { $a <=> $b } keys %{$snp{$seq}}) {
#    print "$seq $pos\n";
    for my $id (@id) {
      $aln{$id} .= $snp{$seq}{$pos}{$id} || $snp{$seq}{$pos}{REF};
    }
  }
}

for my $id (@id) {
  print ">$id\n", $aln{$id}, "\n";
}


#----------------------------------------------------------------------
# Option setting routines

sub setOptions {
  use Getopt::Long;

  @Options = (
    {OPT=>"help",    VAR=>\&usage,             DESC=>"This help"},
    {OPT=>"verbose!",  VAR=>\$verbose, DEFAULT=>0, DESC=>"Verbose output"},
  );

  (!@ARGV) && (usage());

  &GetOptions(map {$_->{OPT}, $_->{VAR}} @Options) || usage();

  # Now setup default values.
  foreach (@Options) {
    if (defined($_->{DEFAULT}) && !defined(${$_->{VAR}})) {
      ${$_->{VAR}} = $_->{DEFAULT};
    }
  }
}

sub usage {
  print "Usage: $0 [options] sample1.vcf sample2.vcf ...\n";
  foreach (@Options) {
    printf "  --%-13s %s%s.\n",$_->{OPT},$_->{DESC},
           defined($_->{DEFAULT}) ? " (default '$_->{DEFAULT}')" : "";
  }
  exit(1);
}
 
#----------------------------------------------------------------------
