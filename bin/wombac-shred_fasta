#!/usr/bin/env perl
use warnings;
use strict;
use Data::Dumper;

my(@Options, $verbose, $readlen, $coverage, $fastq, $qual);
setOptions();

my $qualstr = (chr(33+$qual))x$readlen;
$qualstr = "+\n$qualstr\n";

my $idchar = $fastq ? '@' : '>';

my $id = 0;
my $seq = '';

while (<>) {
  chomp;
  if (m/^>/) {
    shred($seq);
    $seq = '';
  }
  else {
    $seq .= $_;
  }
}
shred($seq);

#......................................................................

sub shred {
  my($dna) = @_;
  return if not defined $dna;
  my $L = length($dna);
  return if $L < $readlen;
  $id++;
  my $stride = $readlen / $coverage;
#  print STDERR "len=$L rlen=$readlen cov=$coverage stride=$stride\n";
  for (my $start=0; $start+$readlen < $L; $start+=$stride) {
    my $i = int($start);
    print $idchar, $id, '.', $i+1, "\n", substr($dna, $i, $readlen), "\n";
    print $qualstr if $fastq;
  }  
}  


#----------------------------------------------------------------------
# Option setting routines

sub setOptions {
  use Getopt::Long;

  @Options = (
    {OPT=>"help",    VAR=>\&usage,             DESC=>"This help"},
    {OPT=>"verbose!",  VAR=>\$verbose, DEFAULT=>0, DESC=>"Verbose output"},
    {OPT=>"readlen=i",  VAR=>\$readlen, DEFAULT=>100, DESC=>"Read length"},
    {OPT=>"coverage=f",  VAR=>\$coverage, DEFAULT=>50, DESC=>"Depth of coverage"},
    {OPT=>"fastq!",  VAR=>\$fastq, DEFAULT=>0, DESC=>"Output FASTQ, not FASTA"},
    {OPT=>"qual=i",  VAR=>\$qual, DEFAULT=>40, DESC=>"Fake base quality (if --fastq)"},
  );

#  (!@ARGV) && (usage());

  &GetOptions(map {$_->{OPT}, $_->{VAR}} @Options) || usage();

  # Now setup default values.
  foreach (@Options) {
    if (defined($_->{DEFAULT}) && !defined(${$_->{VAR}})) {
      ${$_->{VAR}} = $_->{DEFAULT};
    }
  }
}

sub usage {
  print "Usage: $0 [options] contigs.fa [more.fa ...]\n";
  foreach (@Options) {
    printf "  --%-13s %s%s.\n",$_->{OPT},$_->{DESC},
           defined($_->{DEFAULT}) ? " (default '$_->{DEFAULT}')" : "";
  }
  exit(1);
}
 
#----------------------------------------------------------------------

